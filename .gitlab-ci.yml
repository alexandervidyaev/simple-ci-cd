stages:
  - build
  - deploy

variables:
  NAME: my-nginx

Build container:
  stage: build
  tags:
    - docker-runner
  image: docker:20.10.18
  services:
    - docker:dind
  script:
    - docker build -t $CI_REGISTRY/$GITLAB_USER_LOGIN/$CI_PROJECT_NAME/$NAME:$CI_COMMIT_SHORT_SHA .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY/$GITLAB_USER_LOGIN/$CI_PROJECT_NAME/$NAME:$CI_COMMIT_SHORT_SHA

Deploy container:
  stage: deploy
  tags:
    - docker-runner
  image: alpine:3.15
  before_script: 
    - apk update && apk add openssh-client 
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SERVER >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts  
  script:
    - ssh -o StrictHostKeyChecking=no $USERNAME@$SERVER "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -o StrictHostKeyChecking=no $USERNAME@$SERVER "docker rm -f $NAME || true"
    - ssh -o StrictHostKeyChecking=no $USERNAME@$SERVER "docker run -d -p 80:80 $CI_REGISTRY/$GITLAB_USER_LOGIN/$CI_PROJECT_NAME/$NAME:$CI_COMMIT_SHORT_SHA"
   

